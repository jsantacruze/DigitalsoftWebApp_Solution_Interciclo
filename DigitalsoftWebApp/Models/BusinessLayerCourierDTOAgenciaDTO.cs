/* 
 * API Servicios Integrados InventPro ERP - DigitalsoftEC
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = api.digitalsoftec.net.Client.SwaggerDateConverter;
namespace api.digitalsoftec.net.Model
{
    /// <summary>
    /// BusinessLayerCourierDTOAgenciaDTO
    /// </summary>
    [DataContract]
        public partial class BusinessLayerCourierDTOAgenciaDTO :  IEquatable<BusinessLayerCourierDTOAgenciaDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BusinessLayerCourierDTOAgenciaDTO" /> class.
        /// </summary>
        /// <param name="strIdagencia">strIdagencia.</param>
        /// <param name="strDescripcionAgencia">strDescripcionAgencia.</param>
        /// <param name="iddireccionAgencia">iddireccionAgencia.</param>
        /// <param name="strTelefono">strTelefono.</param>
        /// <param name="strMovil">strMovil.</param>
        /// <param name="strEmail">strEmail.</param>
        /// <param name="strFax">strFax.</param>
        /// <param name="idagente">idagente.</param>
        /// <param name="imgFoto">imgFoto.</param>
        /// <param name="agenciaActiva">agenciaActiva.</param>
        /// <param name="nombreComercial">nombreComercial.</param>
        /// <param name="cobroAdicionalLibras">cobroAdicionalLibras.</param>
        /// <param name="cobroAdicionalSobres">cobroAdicionalSobres.</param>
        /// <param name="direccion">direccion.</param>
        public BusinessLayerCourierDTOAgenciaDTO(string strIdagencia = default(string), string strDescripcionAgencia = default(string), long? iddireccionAgencia = default(long?), string strTelefono = default(string), string strMovil = default(string), string strEmail = default(string), string strFax = default(string), string idagente = default(string), byte[] imgFoto = default(byte[]), bool? agenciaActiva = default(bool?), string nombreComercial = default(string), double? cobroAdicionalLibras = default(double?), double? cobroAdicionalSobres = default(double?), BusinessLayerCourierDTODireccionDTO direccion = default(BusinessLayerCourierDTODireccionDTO))
        {
            this.str_idagencia = strIdagencia;
            this.str_descripcion_agencia = strDescripcionAgencia;
            this.iddireccion_agencia = iddireccionAgencia;
            this.str_telefono = strTelefono;
            this.str_movil = strMovil;
            this.str_email = strEmail;
            this.str_fax = strFax;
            this.idagente = idagente;
            this.img_foto = imgFoto;
            this.agencia_activa = agenciaActiva;
            this.nombre_comercial = nombreComercial;
            this.cobro_adicional_libras = cobroAdicionalLibras;
            this.cobro_adicional_sobres = cobroAdicionalSobres;
            this.direccion = direccion;
        }
        
        /// <summary>
        /// Gets or Sets str_idagencia
        /// </summary>
        [DataMember(Name="strIdagencia", EmitDefaultValue=false)]
        public string str_idagencia { get; set; }

        /// <summary>
        /// Gets or Sets str_descripcion_agencia
        /// </summary>
        [DataMember(Name="strDescripcionAgencia", EmitDefaultValue=false)]
        public string str_descripcion_agencia { get; set; }

        /// <summary>
        /// Gets or Sets iddireccion_agencia
        /// </summary>
        [DataMember(Name="iddireccionAgencia", EmitDefaultValue=false)]
        public long? iddireccion_agencia { get; set; }

        /// <summary>
        /// Gets or Sets str_telefono
        /// </summary>
        [DataMember(Name="strTelefono", EmitDefaultValue=false)]
        public string str_telefono { get; set; }

        /// <summary>
        /// Gets or Sets str_movil
        /// </summary>
        [DataMember(Name="strMovil", EmitDefaultValue=false)]
        public string str_movil { get; set; }

        /// <summary>
        /// Gets or Sets str_email
        /// </summary>
        [DataMember(Name="strEmail", EmitDefaultValue=false)]
        public string str_email { get; set; }

        /// <summary>
        /// Gets or Sets str_fax
        /// </summary>
        [DataMember(Name="strFax", EmitDefaultValue=false)]
        public string str_fax { get; set; }

        /// <summary>
        /// Gets or Sets idagente
        /// </summary>
        [DataMember(Name="idagente", EmitDefaultValue=false)]
        public string idagente { get; set; }

        /// <summary>
        /// Gets or Sets img_foto
        /// </summary>
        [DataMember(Name="imgFoto", EmitDefaultValue=false)]
        public byte[] img_foto { get; set; }

        /// <summary>
        /// Gets or Sets agencia_activa
        /// </summary>
        [DataMember(Name="agenciaActiva", EmitDefaultValue=false)]
        public bool? agencia_activa { get; set; }

        /// <summary>
        /// Gets or Sets nombre_comercial
        /// </summary>
        [DataMember(Name="nombreComercial", EmitDefaultValue=false)]
        public string nombre_comercial { get; set; }

        /// <summary>
        /// Gets or Sets cobro_adicional_libras
        /// </summary>
        [DataMember(Name="cobroAdicionalLibras", EmitDefaultValue=false)]
        public double? cobro_adicional_libras { get; set; }

        /// <summary>
        /// Gets or Sets cobro_adicional_sobres
        /// </summary>
        [DataMember(Name="cobroAdicionalSobres", EmitDefaultValue=false)]
        public double? cobro_adicional_sobres { get; set; }

        /// <summary>
        /// Gets or Sets direccion
        /// </summary>
        [DataMember(Name="direccion", EmitDefaultValue=false)]
        public BusinessLayerCourierDTODireccionDTO direccion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BusinessLayerCourierDTOAgenciaDTO {\n");
            sb.Append("  str_idagencia: ").Append(str_idagencia).Append("\n");
            sb.Append("  str_descripcion_agencia: ").Append(str_descripcion_agencia).Append("\n");
            sb.Append("  iddireccion_agencia: ").Append(iddireccion_agencia).Append("\n");
            sb.Append("  str_telefono: ").Append(str_telefono).Append("\n");
            sb.Append("  str_movil: ").Append(str_movil).Append("\n");
            sb.Append("  str_email: ").Append(str_email).Append("\n");
            sb.Append("  str_fax: ").Append(str_fax).Append("\n");
            sb.Append("  idagente: ").Append(idagente).Append("\n");
            sb.Append("  img_foto: ").Append(img_foto).Append("\n");
            sb.Append("  agencia_activa: ").Append(agencia_activa).Append("\n");
            sb.Append("  nombre_comercial: ").Append(nombre_comercial).Append("\n");
            sb.Append("  cobro_adicional_libras: ").Append(cobro_adicional_libras).Append("\n");
            sb.Append("  cobro_adicional_sobres: ").Append(cobro_adicional_sobres).Append("\n");
            sb.Append("  direccion: ").Append(direccion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BusinessLayerCourierDTOAgenciaDTO);
        }

        /// <summary>
        /// Returns true if BusinessLayerCourierDTOAgenciaDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of BusinessLayerCourierDTOAgenciaDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BusinessLayerCourierDTOAgenciaDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.str_idagencia == input.str_idagencia ||
                    (this.str_idagencia != null &&
                    this.str_idagencia.Equals(input.str_idagencia))
                ) && 
                (
                    this.str_descripcion_agencia == input.str_descripcion_agencia ||
                    (this.str_descripcion_agencia != null &&
                    this.str_descripcion_agencia.Equals(input.str_descripcion_agencia))
                ) && 
                (
                    this.iddireccion_agencia == input.iddireccion_agencia ||
                    (this.iddireccion_agencia != null &&
                    this.iddireccion_agencia.Equals(input.iddireccion_agencia))
                ) && 
                (
                    this.str_telefono == input.str_telefono ||
                    (this.str_telefono != null &&
                    this.str_telefono.Equals(input.str_telefono))
                ) && 
                (
                    this.str_movil == input.str_movil ||
                    (this.str_movil != null &&
                    this.str_movil.Equals(input.str_movil))
                ) && 
                (
                    this.str_email == input.str_email ||
                    (this.str_email != null &&
                    this.str_email.Equals(input.str_email))
                ) && 
                (
                    this.str_fax == input.str_fax ||
                    (this.str_fax != null &&
                    this.str_fax.Equals(input.str_fax))
                ) && 
                (
                    this.idagente == input.idagente ||
                    (this.idagente != null &&
                    this.idagente.Equals(input.idagente))
                ) && 
                (
                    this.img_foto == input.img_foto ||
                    (this.img_foto != null &&
                    this.img_foto.Equals(input.img_foto))
                ) && 
                (
                    this.agencia_activa == input.agencia_activa ||
                    (this.agencia_activa != null &&
                    this.agencia_activa.Equals(input.agencia_activa))
                ) && 
                (
                    this.nombre_comercial == input.nombre_comercial ||
                    (this.nombre_comercial != null &&
                    this.nombre_comercial.Equals(input.nombre_comercial))
                ) && 
                (
                    this.cobro_adicional_libras == input.cobro_adicional_libras ||
                    (this.cobro_adicional_libras != null &&
                    this.cobro_adicional_libras.Equals(input.cobro_adicional_libras))
                ) && 
                (
                    this.cobro_adicional_sobres == input.cobro_adicional_sobres ||
                    (this.cobro_adicional_sobres != null &&
                    this.cobro_adicional_sobres.Equals(input.cobro_adicional_sobres))
                ) && 
                (
                    this.direccion == input.direccion ||
                    (this.direccion != null &&
                    this.direccion.Equals(input.direccion))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.str_idagencia != null)
                    hashCode = hashCode * 59 + this.str_idagencia.GetHashCode();
                if (this.str_descripcion_agencia != null)
                    hashCode = hashCode * 59 + this.str_descripcion_agencia.GetHashCode();
                if (this.iddireccion_agencia != null)
                    hashCode = hashCode * 59 + this.iddireccion_agencia.GetHashCode();
                if (this.str_telefono != null)
                    hashCode = hashCode * 59 + this.str_telefono.GetHashCode();
                if (this.str_movil != null)
                    hashCode = hashCode * 59 + this.str_movil.GetHashCode();
                if (this.str_email != null)
                    hashCode = hashCode * 59 + this.str_email.GetHashCode();
                if (this.str_fax != null)
                    hashCode = hashCode * 59 + this.str_fax.GetHashCode();
                if (this.idagente != null)
                    hashCode = hashCode * 59 + this.idagente.GetHashCode();
                if (this.img_foto != null)
                    hashCode = hashCode * 59 + this.img_foto.GetHashCode();
                if (this.agencia_activa != null)
                    hashCode = hashCode * 59 + this.agencia_activa.GetHashCode();
                if (this.nombre_comercial != null)
                    hashCode = hashCode * 59 + this.nombre_comercial.GetHashCode();
                if (this.cobro_adicional_libras != null)
                    hashCode = hashCode * 59 + this.cobro_adicional_libras.GetHashCode();
                if (this.cobro_adicional_sobres != null)
                    hashCode = hashCode * 59 + this.cobro_adicional_sobres.GetHashCode();
                if (this.direccion != null)
                    hashCode = hashCode * 59 + this.direccion.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
