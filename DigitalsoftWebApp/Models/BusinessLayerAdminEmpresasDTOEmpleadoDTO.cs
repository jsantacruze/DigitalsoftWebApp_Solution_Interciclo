/* 
 * API Servicios Integrados InventPro ERP - DigitalsoftEC
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = api.digitalsoftec.net.Client.SwaggerDateConverter;
namespace api.digitalsoftec.net.Model
{
    /// <summary>
    /// BusinessLayerAdminEmpresasDTOEmpleadoDTO
    /// </summary>
    [DataContract]
        public partial class BusinessLayerAdminEmpresasDTOEmpleadoDTO :  IEquatable<BusinessLayerAdminEmpresasDTOEmpleadoDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BusinessLayerAdminEmpresasDTOEmpleadoDTO" /> class.
        /// </summary>
        /// <param name="personaId">personaId.</param>
        /// <param name="personaNroIdentificacion">personaNroIdentificacion.</param>
        /// <param name="personaNombres">personaNombres.</param>
        /// <param name="personaApellidos">personaApellidos.</param>
        /// <param name="personaFechaNacimiento">personaFechaNacimiento.</param>
        /// <param name="generoId">generoId.</param>
        /// <param name="genero">genero.</param>
        /// <param name="tipoPersonaId">tipoPersonaId.</param>
        /// <param name="tipoPersona">tipoPersona.</param>
        /// <param name="tipoIdentificacionId">tipoIdentificacionId.</param>
        /// <param name="tipoIdentificacion">tipoIdentificacion.</param>
        /// <param name="estadoCivilId">estadoCivilId.</param>
        /// <param name="estadoCivil">estadoCivil.</param>
        /// <param name="isExterna">isExterna.</param>
        /// <param name="empleadoCodigoInterno">empleadoCodigoInterno.</param>
        /// <param name="empleadoCargo">empleadoCargo.</param>
        /// <param name="empleadoFehaIngreso">empleadoFehaIngreso.</param>
        /// <param name="empleadoFechaUltimaModificacion">empleadoFechaUltimaModificacion.</param>
        /// <param name="clienteObservaciones">clienteObservaciones.</param>
        /// <param name="empleadoUserRegistraId">empleadoUserRegistraId.</param>
        /// <param name="empresaId">empresaId.</param>
        /// <param name="empresa">empresa.</param>
        public BusinessLayerAdminEmpresasDTOEmpleadoDTO(long? personaId = default(long?), string personaNroIdentificacion = default(string), string personaNombres = default(string), string personaApellidos = default(string), DateTime? personaFechaNacimiento = default(DateTime?), int? generoId = default(int?), BusinessLayerPersonsDTOGeneroDTO genero = default(BusinessLayerPersonsDTOGeneroDTO), int? tipoPersonaId = default(int?), BusinessLayerPersonsDTOTipoPersonaDTO tipoPersona = default(BusinessLayerPersonsDTOTipoPersonaDTO), int? tipoIdentificacionId = default(int?), BusinessLayerCommonDTOTipoIdentificacionDTO tipoIdentificacion = default(BusinessLayerCommonDTOTipoIdentificacionDTO), int? estadoCivilId = default(int?), BusinessLayerPersonsDTOEstadoCivilDTO estadoCivil = default(BusinessLayerPersonsDTOEstadoCivilDTO), bool? isExterna = default(bool?), string empleadoCodigoInterno = default(string), string empleadoCargo = default(string), string empleadoFehaIngreso = default(string), DateTime? empleadoFechaUltimaModificacion = default(DateTime?), string clienteObservaciones = default(string), string empleadoUserRegistraId = default(string), int? empresaId = default(int?), BusinessLayerAdminEmpresasDTOEmpresaDTO empresa = default(BusinessLayerAdminEmpresasDTOEmpresaDTO))
        {
            this.persona_id = personaId;
            this.persona_nro_identificacion = personaNroIdentificacion;
            this.persona_nombres = personaNombres;
            this.persona_apellidos = personaApellidos;
            this.persona_fecha_nacimiento = personaFechaNacimiento;
            this.genero_id = generoId;
            this.genero = genero;
            this.tipo_persona_id = tipoPersonaId;
            this.tipo_persona = tipoPersona;
            this.tipo_identificacion_id = tipoIdentificacionId;
            this.tipo_identificacion = tipoIdentificacion;
            this.estado_civil_id = estadoCivilId;
            this.estado_civil = estadoCivil;
            this.is_externa = isExterna;
            this.empleado_codigo_interno = empleadoCodigoInterno;
            this.empleado_cargo = empleadoCargo;
            this.empleado_feha_ingreso = empleadoFehaIngreso;
            this.empleado_fecha_ultima_modificacion = empleadoFechaUltimaModificacion;
            this.cliente_observaciones = clienteObservaciones;
            this.empleado_user_registra_id = empleadoUserRegistraId;
            this.empresa_id = empresaId;
            this.empresa = empresa;
        }
        
        /// <summary>
        /// Gets or Sets persona_id
        /// </summary>
        [DataMember(Name="persona_id", EmitDefaultValue=false)]
        public long? persona_id { get; set; }

        /// <summary>
        /// Gets or Sets persona_nro_identificacion
        /// </summary>
        [DataMember(Name="persona_nro_identificacion", EmitDefaultValue=false)]
        public string persona_nro_identificacion { get; set; }

        /// <summary>
        /// Gets or Sets persona_nombres
        /// </summary>
        [DataMember(Name="persona_nombres", EmitDefaultValue=false)]
        public string persona_nombres { get; set; }

        /// <summary>
        /// Gets or Sets persona_apellidos
        /// </summary>
        [DataMember(Name="persona_apellidos", EmitDefaultValue=false)]
        public string persona_apellidos { get; set; }

        /// <summary>
        /// Gets or Sets persona_fecha_nacimiento
        /// </summary>
        [DataMember(Name="persona_fecha_nacimiento", EmitDefaultValue=false)]
        public DateTime? persona_fecha_nacimiento { get; set; }

        /// <summary>
        /// Gets or Sets genero_id
        /// </summary>
        [DataMember(Name="genero_id", EmitDefaultValue=false)]
        public int? genero_id { get; set; }

        /// <summary>
        /// Gets or Sets genero
        /// </summary>
        [DataMember(Name="genero", EmitDefaultValue=false)]
        public BusinessLayerPersonsDTOGeneroDTO genero { get; set; }

        /// <summary>
        /// Gets or Sets tipo_persona_id
        /// </summary>
        [DataMember(Name="tipo_persona_id", EmitDefaultValue=false)]
        public int? tipo_persona_id { get; set; }

        /// <summary>
        /// Gets or Sets tipo_persona
        /// </summary>
        [DataMember(Name="tipoPersona", EmitDefaultValue=false)]
        public BusinessLayerPersonsDTOTipoPersonaDTO tipo_persona { get; set; }

        /// <summary>
        /// Gets or Sets tipo_identificacion_id
        /// </summary>
        [DataMember(Name="tipo_identificacion_id", EmitDefaultValue=false)]
        public int? tipo_identificacion_id { get; set; }

        /// <summary>
        /// Gets or Sets tipo_identificacion
        /// </summary>
        [DataMember(Name="tipoIdentificacion", EmitDefaultValue=false)]
        public BusinessLayerCommonDTOTipoIdentificacionDTO tipo_identificacion { get; set; }

        /// <summary>
        /// Gets or Sets estado_civil_id
        /// </summary>
        [DataMember(Name="estado_civil_id", EmitDefaultValue=false)]
        public int? estado_civil_id { get; set; }

        /// <summary>
        /// Gets or Sets estado_civil
        /// </summary>
        [DataMember(Name="estadoCivil", EmitDefaultValue=false)]
        public BusinessLayerPersonsDTOEstadoCivilDTO estado_civil { get; set; }

        /// <summary>
        /// Gets or Sets is_externa
        /// </summary>
        [DataMember(Name="is_externa", EmitDefaultValue=false)]
        public bool? is_externa { get; set; }

        /// <summary>
        /// Gets or Sets empleado_codigo_interno
        /// </summary>
        [DataMember(Name="empleado_codigo_interno", EmitDefaultValue=false)]
        public string empleado_codigo_interno { get; set; }

        /// <summary>
        /// Gets or Sets empleado_cargo
        /// </summary>
        [DataMember(Name="empleado_cargo", EmitDefaultValue=false)]
        public string empleado_cargo { get; set; }

        /// <summary>
        /// Gets or Sets empleado_feha_ingreso
        /// </summary>
        [DataMember(Name="empleado_feha_ingreso", EmitDefaultValue=false)]
        public string empleado_feha_ingreso { get; set; }

        /// <summary>
        /// Gets or Sets empleado_fecha_ultima_modificacion
        /// </summary>
        [DataMember(Name="empleado_fecha_ultima_modificacion", EmitDefaultValue=false)]
        public DateTime? empleado_fecha_ultima_modificacion { get; set; }

        /// <summary>
        /// Gets or Sets cliente_observaciones
        /// </summary>
        [DataMember(Name="cliente_observaciones", EmitDefaultValue=false)]
        public string cliente_observaciones { get; set; }

        /// <summary>
        /// Gets or Sets empleado_user_registra_id
        /// </summary>
        [DataMember(Name="empleado_user_registra_id", EmitDefaultValue=false)]
        public string empleado_user_registra_id { get; set; }

        /// <summary>
        /// Gets or Sets empresa_id
        /// </summary>
        [DataMember(Name="empresa_id", EmitDefaultValue=false)]
        public int? empresa_id { get; set; }

        /// <summary>
        /// Gets or Sets empresa
        /// </summary>
        [DataMember(Name="empresa", EmitDefaultValue=false)]
        public BusinessLayerAdminEmpresasDTOEmpresaDTO empresa { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BusinessLayerAdminEmpresasDTOEmpleadoDTO {\n");
            sb.Append("  persona_id: ").Append(persona_id).Append("\n");
            sb.Append("  persona_nro_identificacion: ").Append(persona_nro_identificacion).Append("\n");
            sb.Append("  persona_nombres: ").Append(persona_nombres).Append("\n");
            sb.Append("  persona_apellidos: ").Append(persona_apellidos).Append("\n");
            sb.Append("  persona_fecha_nacimiento: ").Append(persona_fecha_nacimiento).Append("\n");
            sb.Append("  genero_id: ").Append(genero_id).Append("\n");
            sb.Append("  genero: ").Append(genero).Append("\n");
            sb.Append("  tipo_persona_id: ").Append(tipo_persona_id).Append("\n");
            sb.Append("  tipo_persona: ").Append(tipo_persona).Append("\n");
            sb.Append("  tipo_identificacion_id: ").Append(tipo_identificacion_id).Append("\n");
            sb.Append("  tipo_identificacion: ").Append(tipo_identificacion).Append("\n");
            sb.Append("  estado_civil_id: ").Append(estado_civil_id).Append("\n");
            sb.Append("  estado_civil: ").Append(estado_civil).Append("\n");
            sb.Append("  is_externa: ").Append(is_externa).Append("\n");
            sb.Append("  empleado_codigo_interno: ").Append(empleado_codigo_interno).Append("\n");
            sb.Append("  empleado_cargo: ").Append(empleado_cargo).Append("\n");
            sb.Append("  empleado_feha_ingreso: ").Append(empleado_feha_ingreso).Append("\n");
            sb.Append("  empleado_fecha_ultima_modificacion: ").Append(empleado_fecha_ultima_modificacion).Append("\n");
            sb.Append("  cliente_observaciones: ").Append(cliente_observaciones).Append("\n");
            sb.Append("  empleado_user_registra_id: ").Append(empleado_user_registra_id).Append("\n");
            sb.Append("  empresa_id: ").Append(empresa_id).Append("\n");
            sb.Append("  empresa: ").Append(empresa).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BusinessLayerAdminEmpresasDTOEmpleadoDTO);
        }

        /// <summary>
        /// Returns true if BusinessLayerAdminEmpresasDTOEmpleadoDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of BusinessLayerAdminEmpresasDTOEmpleadoDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BusinessLayerAdminEmpresasDTOEmpleadoDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.persona_id == input.persona_id ||
                    (this.persona_id != null &&
                    this.persona_id.Equals(input.persona_id))
                ) && 
                (
                    this.persona_nro_identificacion == input.persona_nro_identificacion ||
                    (this.persona_nro_identificacion != null &&
                    this.persona_nro_identificacion.Equals(input.persona_nro_identificacion))
                ) && 
                (
                    this.persona_nombres == input.persona_nombres ||
                    (this.persona_nombres != null &&
                    this.persona_nombres.Equals(input.persona_nombres))
                ) && 
                (
                    this.persona_apellidos == input.persona_apellidos ||
                    (this.persona_apellidos != null &&
                    this.persona_apellidos.Equals(input.persona_apellidos))
                ) && 
                (
                    this.persona_fecha_nacimiento == input.persona_fecha_nacimiento ||
                    (this.persona_fecha_nacimiento != null &&
                    this.persona_fecha_nacimiento.Equals(input.persona_fecha_nacimiento))
                ) && 
                (
                    this.genero_id == input.genero_id ||
                    (this.genero_id != null &&
                    this.genero_id.Equals(input.genero_id))
                ) && 
                (
                    this.genero == input.genero ||
                    (this.genero != null &&
                    this.genero.Equals(input.genero))
                ) && 
                (
                    this.tipo_persona_id == input.tipo_persona_id ||
                    (this.tipo_persona_id != null &&
                    this.tipo_persona_id.Equals(input.tipo_persona_id))
                ) && 
                (
                    this.tipo_persona == input.tipo_persona ||
                    (this.tipo_persona != null &&
                    this.tipo_persona.Equals(input.tipo_persona))
                ) && 
                (
                    this.tipo_identificacion_id == input.tipo_identificacion_id ||
                    (this.tipo_identificacion_id != null &&
                    this.tipo_identificacion_id.Equals(input.tipo_identificacion_id))
                ) && 
                (
                    this.tipo_identificacion == input.tipo_identificacion ||
                    (this.tipo_identificacion != null &&
                    this.tipo_identificacion.Equals(input.tipo_identificacion))
                ) && 
                (
                    this.estado_civil_id == input.estado_civil_id ||
                    (this.estado_civil_id != null &&
                    this.estado_civil_id.Equals(input.estado_civil_id))
                ) && 
                (
                    this.estado_civil == input.estado_civil ||
                    (this.estado_civil != null &&
                    this.estado_civil.Equals(input.estado_civil))
                ) && 
                (
                    this.is_externa == input.is_externa ||
                    (this.is_externa != null &&
                    this.is_externa.Equals(input.is_externa))
                ) && 
                (
                    this.empleado_codigo_interno == input.empleado_codigo_interno ||
                    (this.empleado_codigo_interno != null &&
                    this.empleado_codigo_interno.Equals(input.empleado_codigo_interno))
                ) && 
                (
                    this.empleado_cargo == input.empleado_cargo ||
                    (this.empleado_cargo != null &&
                    this.empleado_cargo.Equals(input.empleado_cargo))
                ) && 
                (
                    this.empleado_feha_ingreso == input.empleado_feha_ingreso ||
                    (this.empleado_feha_ingreso != null &&
                    this.empleado_feha_ingreso.Equals(input.empleado_feha_ingreso))
                ) && 
                (
                    this.empleado_fecha_ultima_modificacion == input.empleado_fecha_ultima_modificacion ||
                    (this.empleado_fecha_ultima_modificacion != null &&
                    this.empleado_fecha_ultima_modificacion.Equals(input.empleado_fecha_ultima_modificacion))
                ) && 
                (
                    this.cliente_observaciones == input.cliente_observaciones ||
                    (this.cliente_observaciones != null &&
                    this.cliente_observaciones.Equals(input.cliente_observaciones))
                ) && 
                (
                    this.empleado_user_registra_id == input.empleado_user_registra_id ||
                    (this.empleado_user_registra_id != null &&
                    this.empleado_user_registra_id.Equals(input.empleado_user_registra_id))
                ) && 
                (
                    this.empresa_id == input.empresa_id ||
                    (this.empresa_id != null &&
                    this.empresa_id.Equals(input.empresa_id))
                ) && 
                (
                    this.empresa == input.empresa ||
                    (this.empresa != null &&
                    this.empresa.Equals(input.empresa))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.persona_id != null)
                    hashCode = hashCode * 59 + this.persona_id.GetHashCode();
                if (this.persona_nro_identificacion != null)
                    hashCode = hashCode * 59 + this.persona_nro_identificacion.GetHashCode();
                if (this.persona_nombres != null)
                    hashCode = hashCode * 59 + this.persona_nombres.GetHashCode();
                if (this.persona_apellidos != null)
                    hashCode = hashCode * 59 + this.persona_apellidos.GetHashCode();
                if (this.persona_fecha_nacimiento != null)
                    hashCode = hashCode * 59 + this.persona_fecha_nacimiento.GetHashCode();
                if (this.genero_id != null)
                    hashCode = hashCode * 59 + this.genero_id.GetHashCode();
                if (this.genero != null)
                    hashCode = hashCode * 59 + this.genero.GetHashCode();
                if (this.tipo_persona_id != null)
                    hashCode = hashCode * 59 + this.tipo_persona_id.GetHashCode();
                if (this.tipo_persona != null)
                    hashCode = hashCode * 59 + this.tipo_persona.GetHashCode();
                if (this.tipo_identificacion_id != null)
                    hashCode = hashCode * 59 + this.tipo_identificacion_id.GetHashCode();
                if (this.tipo_identificacion != null)
                    hashCode = hashCode * 59 + this.tipo_identificacion.GetHashCode();
                if (this.estado_civil_id != null)
                    hashCode = hashCode * 59 + this.estado_civil_id.GetHashCode();
                if (this.estado_civil != null)
                    hashCode = hashCode * 59 + this.estado_civil.GetHashCode();
                if (this.is_externa != null)
                    hashCode = hashCode * 59 + this.is_externa.GetHashCode();
                if (this.empleado_codigo_interno != null)
                    hashCode = hashCode * 59 + this.empleado_codigo_interno.GetHashCode();
                if (this.empleado_cargo != null)
                    hashCode = hashCode * 59 + this.empleado_cargo.GetHashCode();
                if (this.empleado_feha_ingreso != null)
                    hashCode = hashCode * 59 + this.empleado_feha_ingreso.GetHashCode();
                if (this.empleado_fecha_ultima_modificacion != null)
                    hashCode = hashCode * 59 + this.empleado_fecha_ultima_modificacion.GetHashCode();
                if (this.cliente_observaciones != null)
                    hashCode = hashCode * 59 + this.cliente_observaciones.GetHashCode();
                if (this.empleado_user_registra_id != null)
                    hashCode = hashCode * 59 + this.empleado_user_registra_id.GetHashCode();
                if (this.empresa_id != null)
                    hashCode = hashCode * 59 + this.empresa_id.GetHashCode();
                if (this.empresa != null)
                    hashCode = hashCode * 59 + this.empresa.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
