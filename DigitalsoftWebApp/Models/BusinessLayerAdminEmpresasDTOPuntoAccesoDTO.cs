/* 
 * API Servicios Integrados InventPro ERP - DigitalsoftEC
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = api.digitalsoftec.net.Client.SwaggerDateConverter;
namespace api.digitalsoftec.net.Model
{
    /// <summary>
    /// BusinessLayerAdminEmpresasDTOPuntoAccesoDTO
    /// </summary>
    [DataContract]
        public partial class BusinessLayerAdminEmpresasDTOPuntoAccesoDTO :  IEquatable<BusinessLayerAdminEmpresasDTOPuntoAccesoDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BusinessLayerAdminEmpresasDTOPuntoAccesoDTO" /> class.
        /// </summary>
        /// <param name="puntoId">puntoId.</param>
        /// <param name="puntoSucursalId">puntoSucursalId.</param>
        /// <param name="puntoDescripcion">puntoDescripcion.</param>
        /// <param name="puntoObservaciones">puntoObservaciones.</param>
        /// <param name="puntoActivo">puntoActivo.</param>
        /// <param name="secuenciasFacturacionDetalle">secuenciasFacturacionDetalle.</param>
        /// <param name="puntoPrinter01">puntoPrinter01.</param>
        /// <param name="puntoPrinter02">puntoPrinter02.</param>
        /// <param name="puntoPrinter03">puntoPrinter03.</param>
        public BusinessLayerAdminEmpresasDTOPuntoAccesoDTO(int? puntoId = default(int?), int? puntoSucursalId = default(int?), string puntoDescripcion = default(string), string puntoObservaciones = default(string), bool? puntoActivo = default(bool?), List<BusinessLayerAdminEmpresasDTOPuntoAccesoSecuenciaFacturacionDetalleDTO> secuenciasFacturacionDetalle = default(List<BusinessLayerAdminEmpresasDTOPuntoAccesoSecuenciaFacturacionDetalleDTO>), string puntoPrinter01 = default(string), string puntoPrinter02 = default(string), string puntoPrinter03 = default(string))
        {
            this.punto_id = puntoId;
            this.punto_sucursal_id = puntoSucursalId;
            this.punto_descripcion = puntoDescripcion;
            this.punto_observaciones = puntoObservaciones;
            this.punto_activo = puntoActivo;
            this.secuencias_facturacion_detalle = secuenciasFacturacionDetalle;
            this.punto_printer_01 = puntoPrinter01;
            this.punto_printer_02 = puntoPrinter02;
            this.punto_printer_03 = puntoPrinter03;
        }
        
        /// <summary>
        /// Gets or Sets punto_id
        /// </summary>
        [DataMember(Name="punto_id", EmitDefaultValue=false)]
        public int? punto_id { get; set; }

        /// <summary>
        /// Gets or Sets punto_sucursal_id
        /// </summary>
        [DataMember(Name="punto_sucursal_id", EmitDefaultValue=false)]
        public int? punto_sucursal_id { get; set; }

        /// <summary>
        /// Gets or Sets punto_descripcion
        /// </summary>
        [DataMember(Name="punto_descripcion", EmitDefaultValue=false)]
        public string punto_descripcion { get; set; }

        /// <summary>
        /// Gets or Sets punto_observaciones
        /// </summary>
        [DataMember(Name="punto_observaciones", EmitDefaultValue=false)]
        public string punto_observaciones { get; set; }

        /// <summary>
        /// Gets or Sets punto_activo
        /// </summary>
        [DataMember(Name="punto_activo", EmitDefaultValue=false)]
        public bool? punto_activo { get; set; }

        /// <summary>
        /// Gets or Sets secuencias_facturacion_detalle
        /// </summary>
        [DataMember(Name="secuencias_facturacion_detalle", EmitDefaultValue=false)]
        public List<BusinessLayerAdminEmpresasDTOPuntoAccesoSecuenciaFacturacionDetalleDTO> secuencias_facturacion_detalle { get; set; }

        /// <summary>
        /// Gets or Sets punto_printer_01
        /// </summary>
        [DataMember(Name="punto_printer_01", EmitDefaultValue=false)]
        public string punto_printer_01 { get; set; }

        /// <summary>
        /// Gets or Sets punto_printer_02
        /// </summary>
        [DataMember(Name="punto_printer_02", EmitDefaultValue=false)]
        public string punto_printer_02 { get; set; }

        /// <summary>
        /// Gets or Sets punto_printer_03
        /// </summary>
        [DataMember(Name="punto_printer_03", EmitDefaultValue=false)]
        public string punto_printer_03 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BusinessLayerAdminEmpresasDTOPuntoAccesoDTO {\n");
            sb.Append("  punto_id: ").Append(punto_id).Append("\n");
            sb.Append("  punto_sucursal_id: ").Append(punto_sucursal_id).Append("\n");
            sb.Append("  punto_descripcion: ").Append(punto_descripcion).Append("\n");
            sb.Append("  punto_observaciones: ").Append(punto_observaciones).Append("\n");
            sb.Append("  punto_activo: ").Append(punto_activo).Append("\n");
            sb.Append("  secuencias_facturacion_detalle: ").Append(secuencias_facturacion_detalle).Append("\n");
            sb.Append("  punto_printer_01: ").Append(punto_printer_01).Append("\n");
            sb.Append("  punto_printer_02: ").Append(punto_printer_02).Append("\n");
            sb.Append("  punto_printer_03: ").Append(punto_printer_03).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BusinessLayerAdminEmpresasDTOPuntoAccesoDTO);
        }

        /// <summary>
        /// Returns true if BusinessLayerAdminEmpresasDTOPuntoAccesoDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of BusinessLayerAdminEmpresasDTOPuntoAccesoDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BusinessLayerAdminEmpresasDTOPuntoAccesoDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.punto_id == input.punto_id ||
                    (this.punto_id != null &&
                    this.punto_id.Equals(input.punto_id))
                ) && 
                (
                    this.punto_sucursal_id == input.punto_sucursal_id ||
                    (this.punto_sucursal_id != null &&
                    this.punto_sucursal_id.Equals(input.punto_sucursal_id))
                ) && 
                (
                    this.punto_descripcion == input.punto_descripcion ||
                    (this.punto_descripcion != null &&
                    this.punto_descripcion.Equals(input.punto_descripcion))
                ) && 
                (
                    this.punto_observaciones == input.punto_observaciones ||
                    (this.punto_observaciones != null &&
                    this.punto_observaciones.Equals(input.punto_observaciones))
                ) && 
                (
                    this.punto_activo == input.punto_activo ||
                    (this.punto_activo != null &&
                    this.punto_activo.Equals(input.punto_activo))
                ) && 
                (
                    this.secuencias_facturacion_detalle == input.secuencias_facturacion_detalle ||
                    this.secuencias_facturacion_detalle != null &&
                    input.secuencias_facturacion_detalle != null &&
                    this.secuencias_facturacion_detalle.SequenceEqual(input.secuencias_facturacion_detalle)
                ) && 
                (
                    this.punto_printer_01 == input.punto_printer_01 ||
                    (this.punto_printer_01 != null &&
                    this.punto_printer_01.Equals(input.punto_printer_01))
                ) && 
                (
                    this.punto_printer_02 == input.punto_printer_02 ||
                    (this.punto_printer_02 != null &&
                    this.punto_printer_02.Equals(input.punto_printer_02))
                ) && 
                (
                    this.punto_printer_03 == input.punto_printer_03 ||
                    (this.punto_printer_03 != null &&
                    this.punto_printer_03.Equals(input.punto_printer_03))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.punto_id != null)
                    hashCode = hashCode * 59 + this.punto_id.GetHashCode();
                if (this.punto_sucursal_id != null)
                    hashCode = hashCode * 59 + this.punto_sucursal_id.GetHashCode();
                if (this.punto_descripcion != null)
                    hashCode = hashCode * 59 + this.punto_descripcion.GetHashCode();
                if (this.punto_observaciones != null)
                    hashCode = hashCode * 59 + this.punto_observaciones.GetHashCode();
                if (this.punto_activo != null)
                    hashCode = hashCode * 59 + this.punto_activo.GetHashCode();
                if (this.secuencias_facturacion_detalle != null)
                    hashCode = hashCode * 59 + this.secuencias_facturacion_detalle.GetHashCode();
                if (this.punto_printer_01 != null)
                    hashCode = hashCode * 59 + this.punto_printer_01.GetHashCode();
                if (this.punto_printer_02 != null)
                    hashCode = hashCode * 59 + this.punto_printer_02.GetHashCode();
                if (this.punto_printer_03 != null)
                    hashCode = hashCode * 59 + this.punto_printer_03.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
